
rooms = {
    'Office': {'south': 'lobby'},
    'lobby': {'west': 'training room', 'item': 'pen and paper'},
    'training room': {'east': 'lobby', 'south': 'break room', 'west': 'storage room', 'north': 'samurai exhibit',
                      'item': 'map'},
    'break room': {'north': 'training room', 'east': 'viking exhibit', 'item': 'energy bar'},
    'viking exhibit': {'west': 'break room', 'item': 'password(118SBD)'},
    'storage room': {'east': 'training room', 'item': 'robbers'},
    'samurai exhibit': {'south': 'training room', 'east': 'mummy exhibit', 'item': 'sword'},
    'mummy exhibit': {'west': 'samurai exhibit', 'item': 'key'}
}
def name_intro(n,u): 
    print ("Hello, what is your name?")
    n=input()
    print ("Hello, ", n, "Welcome to the game! Enjoy!\n")
    print ("Type Y to read game background information. Type N to skip")
    
    return n,u
def game_background(u):
    u=input().upper()
    if u=="Y":
        print(
        'You are stuck inside of a museuem with a group of vicious robbers.\n'
        'The robbers are after an extremely valuable gemstone that has belonged to your family for centuries.\n'
        'You must stop the robbers by leaving the office to collect items that you need to trigger the panic button that is located in the storage room (Where the robbers are!). \n '
        'You must get the following items before making your way to the robbers and pushing the panic button:\n'
        '*A map of the museum that is located in the training room,\n '
        '*A sword (to protect yourself with)from the Samurai room,\n'
        '*A key that is hidden in the mummy exhibit room, \n'
        '*An energy bar from the break room(to gain enough energy to complete the mission),\n'
        '*A pen and a piece of paper from the lobby which you will use to write down important information about the criminals,\n'
        '*and a password that will grant you access to the panic button. \n'
        'The robbers are hiding out in the storage room putting final touches on their heist.\n'
        '\nBe sure not to run into them before collecting all 6 items!'
        '\nAfter collecting all of the items you will make your way to the storage room, unlock the door, enter the password you collected on your way and finally push the panic button to alert police and stop the robbers. ')
        print('------------------------------------------------------------------')
        return u
def direction_info(u): 
    if u!='Y':
        print("Type Y to read game directions. Type N to skip")
        u=input().upper()
    if u=='Y':
        print("HOW TO PLAY: \n")
        print("*You can navigate the musuem using the following prompts:")
        print("*Go north to travel north")
        print("*Go south to travel south")
        print("*Go east to travel east")
        print("*Go west to travel west")
        print("*NOTE: You  must type Go in front of your direction you can not just type north,south,east or west")
        print("*If you see an item in a room you can retrieve that item by typing get 'item name'")
        print('*You must collect all 6 items and make your way to the storage room to win the game')
        print ("TYPE EXIT TO EXIT GAME AT ANY TIME!")
        return u
def print_initial_stats():
    print ('----------------------------------------')
    print ("LETS GET STARTED! GOOD LUCK!")
    print("You are in the office!")
    print("Inventory: empty", )
    print("What's your next move?")
    print('------------------------')
def print_error_message():
    print ("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")
    print ("ERROR! Please check your prompt and retry using:\n""Go south, Go east, Go north, Go west or get 'item name'")
    print ("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!")
def print_current_stats_(_state, _inventory):
    print("You are  in the", _state, "!")
    print("Current Inventory: ", _inventory)
    print("What's your next move?")
    print("----------------------")
    return _state , _inventory    

def print_current_stats(_state, _inventory,_items):
    print("You are  in the", _state, "!")
    print("Current Inventory: ", _inventory)
    print ("You see a ", _items)
    print("What's your next move?")
    print("----------------------")
    return _state , _inventory ,_items
    
    
def main():
    state = 'Office'
    inventory = []
    inventory_length = len(inventory)
    read_inventory=' '.join(inventory)
    
    name=''
    user_background_input=''
    
    name_intro(name, user_background_input)
    game_background(user_background_input)
    direction_info(user_background_input)
    print_initial_stats()
    move = input().lower()
    
    
    print("-------------------------")
    
    while state != 'storage room':
        
        if (move.split(' ')[0]=='exit' and move.split(' ')[1]=='game'):
            print ("EXITING GAME NOW! COME BACK SOON!")
            break
        while state=='Office'and (move.split(' ')[0].lower()=='get'): #while user trys to enter 'get item' while still in the office
            
            print ("No items available yet!")
            
            print_current_stats_(state, inventory)
            move=input().lower() 
            
        while len(move.split(" "))<2 or move.split(' ')[0]!='get' and move.split(' ')[0]!='go' and move.split(' ')[0]!='exit':  #while user input (move) does not start with go, get, exit or user input is only one word wrong (like typing south instead of go south)
            print_error_message()
            print_current_stats_(state, inventory)
            move=input().lower() 
         
        while not move.split(" ")[1] in rooms[state] and move.split(" ")[0] == 'go': #while user input is NOT equal to a direction that corresponds to the room in the dictionary
            print("Can't go that direction!")
            print_current_stats_(state, inventory)
            items=' '
            move = input().lower()
            print("-------------------------")
    
        while move.split(" ")[1] in rooms[state] and move.split(" ")[0] == 'go': #while user input is equal to a direction that corresponds to the room in the dictionary
            new_state = rooms[state][move.split(" ")[1]]
            items = rooms[new_state]['item']
            state = new_state
            if (new_state == 'storage room') and inventory_length != 6:
                print("YOU HAVE BEEN CAUGHT BY THE ROBBERS! GAME OVER!")
                break
            if (new_state == 'storage room') and inventory_length == 6:
                print("YOU HAVE MADE IT INTO THE STORAGE ROOM! YOU HAVE ALL ITEMS YOU NEED!")
                print("Inventory: ", inventory)
                print ("Would you like to use the key to unlock the storage room? YES OR NO?")
                use_key=input().upper()
                if use_key=='NO':
                    print ("THE ROBBERS HAVE OPENED THE DOOR! YOU MUST STAY HIDDEN AND ACT QUICKLY")
                    print("ENTER THE PASSWORD YOU COLLECTED IN THE VIKING EXHIBIT!")
                    password=input().upper()
                    password_hardcopy='118SBD'
                    if password==password_hardcopy:
                        print ("WOULD YOU LIKE TO PUSH THE PANIC BUTTON? YES OR NO")
                        panic_button=input().upper()
                        if panic_button=="YES":
                            print("YOU DEFEATED THE ROBBERS! CONGRATULATIONS! YOU WIN!!")
                            break
                    if password!=password_hardcopy:
                        print (password, " IS THE WRONG PASSWORD!")
                        print ("YOU HAVE BEEN CAUGHT BY THE ROBBERS! GAME OVER!")
                        break
                if use_key=='YES':
                    print("YOU UNLOCKED THE DOOR!")
                    print("ENTER THE PASSWORD YOU COLLECTED IN THE VIKING EXHIBIT!")
                    password=input().upper()
                    password_hardcopy='118SBD'
                    if password==password_hardcopy:
                        print ("WOULD YOU LIKE TO PUSH THE PANIC BUTTON? YES OR NO")
                        panic_button=input().upper()
                        if panic_button=="YES":
                            print("YOU DEFEATED THE ROBBERS! CONGRATULATIONS! YOU WIN!!")
                            break
                    if password!=password_hardcopy:
                        print("OH NO! WRONG PASSWORD!")
                        print ("YOU HAVE BEEN CAUGHT BY THE ROBBERS! GAME OVER!")
                        break
                print("ENTER THE PASSWORD YOU COLLECTED IN THE VIKING EXHIBIT!")
                password=input().upper()
                password_hardcopy='118SBD'
                if password==password_hardcopy:
                    print("YOU DEFEATED THE ROBBERS! CONGRATULATIONS! YOU WIN!!")
                    break
                    while password!=password_hardcopy:
                        print ("WRONG PASSWORD! TRY AGAIN!")
                        password=input().upper()
            print("You are now in the", new_state, "!")
            print("You see a ", items)
            print("Current Inventory: ", inventory)
            print("What's your next move?")
            print("-------------------------")
            move = input().lower()
            print("-------------------------")
            while move.split(' ')[0]=='get' and move.split(' ')[1]=='stats': #if user input is "get stats"
                print_current_stats(state, inventory,items)
                move=input().lower()
            while not move.split(" ")[1] in items and move.split(' ')[0] == 'get'  : #If user input equals 'get item' and the item doesnt correspond to the room in the dictionary
                print("Can't", move)
                print_current_stats(state,inventory,items)
                move = input().lower()
                print("-------------------------")
        
    
        while move.split(" ")[1] in items and move.split(' ')[0] == 'get': #If user input is equal to get item and item corresponds with room in dictionary
            if items in inventory:
                inventory = inventory
                print("Item already exist in inventory!")
                print_current_stats(state, inventory,items)
                move = input().lower()
                print("-------------------------")
            if not items in inventory:
                inventory.append(items)
                print("New item added to inventory!")
                print("You are  in the", new_state, "!")
                print("You see a ", items)
                print("New Inventory: ",inventory)
                inventory_length += 1
                print("What's your next move? ")
                print("-------------------------")
                move = input().lower()
                print("-------------------------")
        while not move.split(" ")[1] in items and move.split(' ')[0] == 'get': #If user enters 'get item' and item name doesn't correspond to room in dictionary
            print("Can't", move)
            print_current_stats(state, inventory,items)
            move = input().lower()
            print("-------------------------")
if __name__ == '__main__': 
    main()                










